@page "/itemsgetall"
@using SupplyDepot.Shared
@inject HttpClient Http

<h1>Avalible Items</h1>

@if (items == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="form-group">
        <a class="btn btn-success" href="itemCreate">New Item</a>
    </div>
    <table class="table">

        <tbody>
            @foreach (var item in items)
            {
            <tr>
                <td>@item.Id.ToString()</td>
                <td>@item.Name.ToString()</td>
                <td>@item.Type.ToString()</td>
                <td>@item.Value.ToString()</td>
                <td><a class="btn btn-success" href="itemedit/@item.Id">Edit</a></td>
                <td><button class="btn btn-danger" @onclick="@(() => DeleteItem(item.Id))">Delete</button></td>
            </tr>
            }
        </tbody>
    </table>
}

@code {
    private Item[] items;

    protected override async Task OnInitializedAsync()
    {
        await LoadItems();
    }

    private async Task LoadItems()
    {
        items = await Http.GetFromJsonAsync<Item[]>("api/ItemsManag/list-items");
    }

    async Task DeleteItem(int itemId)
    {
        var request = await Http.DeleteAsync($"api/ItemsManag/delete-item/{itemId}");
        if (request.IsSuccessStatusCode)
        {
            await LoadItems();
        }
        else
        {
            Console.WriteLine($"[INDEX] BŁĄD: [{request.StatusCode.ToString()}]");
        }
    }

}
